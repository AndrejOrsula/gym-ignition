name: CI

on:
  push:
  pull_request:

jobs:
  developer:
    name: Developer installation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6]
        build_type: [Debug]
        compiler:
          #- gcc7
          - gcc8
          #- clang7
          #- clang8
    container:
      image: diegoferigo/gym-ignition:ci-master
      env:
        PYTHON_VERSION: ${{ matrix.python }}

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      # The entrypoint is not called because it is overridden by GH Actions.
      # Even using the 'jobs.<job_id>.container.options' does not work because the
      # entrypoint of GH Actions overrides the one passed through YAML.
      - name: Execute entrypoint
        run: . /entrypoint.sh

      # Workaround to export environment variables that persist in next steps
      # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      - name: Setup Environment
        run: |
          case ${{ matrix.compiler }} in
              gcc7) CC=gcc ; CXX=g++ ;;
              gcc8) CC=gcc-8 ; CXX=g++-8 ;;
              clang6) CC=clang; CXX=clang++ ;;
              clang7) CC=clang-7; CXX=clang++-7 ;;
              clang8) CC=clang-8; CXX=clang++-8 ;;
              *) echo "Compiler not supported" && exit 1 ;;
          esac
          echo "::set-env name=CC::$CC"
          echo "::set-env name=CXX::$CXX"
          echo "::set-env name=PYTHON_VERSION::${{ matrix.python }}"
          env

      - name: Build and Install C++
        run: |
          env
          mkdir -p build
          cd build
          cmake .. \
            -GNinja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build . --target install

      - name: Setup Python Package
        run: pip3 install -e .

      - name: Python Tests [ScenarI/O]
        run: |
          cd tests
          pytest -m "scenario"

      - name: Python Tests with Valgrind [ScenarI/O]
        if: failure()
        run: |
          pip3 install colour-valgrind
          cd tests
          valgrind --log-file=/tmp/valgrind.log pytest -s -m "scenario" || colour-valgrind -t /tmp/valgrind.log

      - name: Python Tests [gym_ignition]
        run: |
          cd tests
          pytest -m "gym_ignition"

      - name: Python Tests with Valgrind [gym_ignition]
        if: failure()
        run: |
          pip3 install colour-valgrind
          cd tests
          valgrind --log-file=/tmp/valgrind.log pytest -s -m "gym_ignition" || colour-valgrind -t /tmp/valgrind.log

  user:
    name: User installation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python:
          - 3.6
        os:
          - ubuntu-18.04
    container:
      image: diegoferigo/gym-ignition:ci-master
      env:
        PYTHON_VERSION: ${{ matrix.python }}
        CC: gcc-8
        CXX: g++-8

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      # The entrypoint is not called because it is overridden by GH Actions.
      # Even using the 'jobs.<job_id>.container.options' does not work because the
      # entrypoint of GH Actions overrides the one passed through YAML.
      - name: Execute entrypoint
        run: . /entrypoint.sh

      - name: Create wheel
        run: python setup.py bdist_wheel

      - name: Install local wheel
        run: |
          cd dist
          pip install -v *.whl

      - name: Python Tests [ScenarI/O]
        run: |
          cd tests
          pytest -m "scenario"

      - name: Python Tests with Valgrind [ScenarI/O]
        if: failure()
        run: |
          pip3 install colour-valgrind
          cd tests
          valgrind --log-file=/tmp/valgrind.log pytest -s -m "scenario" || colour-valgrind -t /tmp/valgrind.log

      - name: Python Tests [gym_ignition]
        run: |
          cd tests
          pytest -m "gym_ignition"

      - name: Python Tests with Valgrind [gym_ignition]
        if: failure()
        run: |
          pip3 install colour-valgrind
          cd tests
          valgrind --log-file=/tmp/valgrind.log pytest -s -m "gym_ignition" || colour-valgrind -t /tmp/valgrind.log
