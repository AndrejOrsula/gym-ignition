ARG from=ubuntu:bionic
FROM ${from}

# CI preset: CMAKE_BUILD_TYPE=Debug   BUILD_SHARED_LIBS=ON
# CD preset: CMAKE_BUILD_TYPE=Release BUILD_SHARED_LIBS=OFF
ARG CMAKE_BUILD_TYPE=Release
ARG BUILD_SHARED_LIBS=OFF

# Install tools and toolchain
RUN apt-get update &&\
    apt-get install -y --no-install-recommends \
        wget \
        software-properties-common \
        apt-transport-https \
        apt-utils \
        gnupg2 \
        nano \
        rename \
        source-highlight \
        &&\
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add - && \
    apt-add-repository "deb https://apt.kitware.com/ubuntu/ `lsb_release -cs` main" &&\
    add-apt-repository ppa:deadsnakes/ppa &&\
    wget -nv -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&\
    apt-add-repository -y "deb http://apt.llvm.org/`lsb_release -cs`/ llvm-toolchain-`lsb_release -cs`-10 main" &&\
    apt-get update &&\
    apt-get install -y --no-install-recommends \
        git \
        g++ \
        g++-8 \
        clang \
        clang-9 \
        clang-10 \
        make \
        cmake \
        cmake-curses-gui \
        ninja-build \
        valgrind \
        libgflags-dev \
        python3-pip \
        python3.6 \
        # python3.8 \#
        python3.6-dev \
        # python3.8-dev \#
        libpython3.6-dev \
        # libpython3.8-dev \#
        virtualenv \
        swig \
        &&\
    rm -rf /var/lib/apt/lists/*

# Update git (required by actions/checkout)
RUN add-apt-repository ppa:git-core/ppa &&\
    apt-get update &&\
    apt install -y --no-install-recommends git &&\
    rm -rf /var/lib/apt/lists/*

# Install ignition robotics
ARG ignition_codename="citadel"
RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" \
        > /etc/apt/sources.list.d/gazebo-stable.list &&\
    wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - &&\
    apt-get update &&\
    apt-get install -y --no-install-recommends ignition-${ignition_codename} &&\
    rm -rf /var/lib/apt/lists/*

# Install idyntree
RUN apt-get update &&\
    apt-get install -y --no-install-recommends python3-numpy libxml2-dev coinor-libipopt-dev libeigen3-dev &&\
    rm -rf /var/lib/apt/lists/* &&\
    git clone --depth 1 -b feature/numpy-and-ik https://github.com/diegoferigo/idyntree /tmp/idyntree &&\
    mkdir -p /tmp/idyntree/build && cd /tmp/idyntree/build &&\
    cmake .. \
        -GNinja \
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
        -DIDYNTREE_SHARED_LIBRARY:BOOL=${BUILD_SHARED_LIBS} \
        -DIDYNTREE_USES_PYTHON=True \
        -DPython_ADDITIONAL_VERSIONS=3.6 \
        -DIDYNTREE_USES_PYTHON_VERSION=3.6 \
        -DPYTHON_NUMPY_INCLUDE_DIR:PATH=/usr/lib/python3/dist-packages/numpy/core/include \
        -DIDYNTREE_USES_IPOPT:BOOL=ON \
        &&\
    cmake --build . --target install &&\
    rm -r /tmp/idyntree
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib
ENV PYTHONPATH=${PYTHONPATH}:/usr/local/lib/python3/dist-packages

# Setup gym-ignition if installed in Developer mode
ARG install_prefix="/usr/local"
ENV PYTHONPATH="${PYTHONPATH}:${install_prefix}/lib/python3.6/site-packages"
ENV PYTHONPATH="${PYTHONPATH}:${install_prefix}/lib/python3.8/site-packages"

# Prepare virtualenv variables
ENV VIRTUAL_ENV=/venv
ENV PATH=${VIRTUAL_ENV}/bin:${PATH}

COPY entrypoint.sh /entrypoint.sh
COPY setup_virtualenv.sh /setup_virtualenv.sh
RUN chmod 755 /entrypoint.sh
RUN chmod 755 /setup_virtualenv.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
